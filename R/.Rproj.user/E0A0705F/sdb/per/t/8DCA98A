{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Sparklines_colored\"\nauthor: \"Nicolas Gort Freitas\"\ndate: \"July 26, 2016\"\noutput: html_document\n---\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r}\nrequire(ggplot2)\nrequire(cowplo t)\nrequire(gdata)\nrequire(gplots)\nrequire(reshape2)\nrequire(plyr)\nrequire(dplyr)\nrequire(purrr)\nrequire(stringr)\nrequire(tidyr)\n```\n\n\n\n\n\n\n```{r}\n\n\nsparklines <- function(z){\n    plt <- ggplot(z, aes(x=Fraction, y=Count, group=1)) +\n    {if(z$Label==1) {geom_line(size=0.5,aes(color='blue'))}} +\n    {if(z$Label==0) {geom_line(size=0.5) }} +\n    theme(legend.position=\"None\")\n    \n    #print(plt)\n    ?g\n    final_plt <- ggplotGrob(plt)\n\n\n    print(final_plt)\n    #remove unnecessary plot elements\n    final_plt <- gtable_remove_grobs(final_plt, c('title', 'xlab', 'ylab', 'axis-b','axis-l'))\n    print(final_plt)\n        #compress unused plot space\n        final_plt <- gtable_squash_rows(final_plt, c(1, 2, 4, 5, 6))\n    return(final_plt)\n}\n\n\n```\n\n\nRead in experimental data\n```{r}\nlabeled_data <- read.csv(\"labeled_peptides_F4KHD5_ARATH.csv\", sep=\",\", header=TRUE)\n#data <- as.data.frame(lapply(data, unlist))\nlabeled_data$X <- NULL\nlabeled_data$index <- NULL\n# labeled_data$Protein <- NULL\n```\n\n\n\n\n\n\n\nCoverage plot (function)\n```{r}\nrectangles <- function(row){\n    # row1 = data[1:12,]\n    # row2\n    row$dummy_y <- 20\n    \n    rect <- ggplot(data = row, aes(x=max(row$Length), y = dummy_y)) +\n          theme(axis.text = element_text(size=8)) +\n      #xlim(0,max(row$Length)) +\n      geom_blank() +\n      theme(\n        axis.text.y=element_blank(),\n        axis.text.x=element_blank(),\n        axis.title.x=element_blank(),\n        axis.title.y=element_blank(),\n        axis.ticks.y=element_blank(),\n        axis.ticks.x=element_blank(),\n        axis.line.y=element_blank(),\n        axis.line.x=element_blank()\n\n        ) +\n      geom_rect(aes(xmin=0, xmax=max(row$Length), ymin=0, ymax=20,fill=I('grey'))) +\n      geom_vline(xintercept=seq(0, max(final_prot$Length), by=100)) +\n      #scale_x_continuous(breaks = seq(0, max(row$Length), 100),limits=c(0,max(row$Length))) +\n      #scale_y_continuous(breaks = NULL) +\n      geom_rect(aes(xmin=row$Start, xmax=row$End, ymin=0, ymax=20,fill=I('blue'))) +\n    geom_text(aes(label=as.character(head(row$Peptide,1))),size=4,position = position_nudge(x=-0.05*(max(final_prot$Length)),y=-5))#as.character(head(row$Peptide,1)))\n      \n    rect <- ggplotGrob(rect)\n\n\n    print(rect)\n    #remove unnecessary plot elements\n    final_plt <- gtable_remove_grobs(rect, c('title', 'xlab', 'ylab', 'axis-b','axis-l'))\n    print(rect)\n        #compress unused plot space\n        rect <- gtable_squash_rows(rect, c(1, 2, 4, 5, 6))\n    return(rect)\n  \n    #facet_grid(Peptide ~ .)\n}\n```\n\n```{r}\n# \n#    #Choose a group to plot sparklines for\n#    #Here, groups are numbered 1-700\n#    #for( i in seq(302, 302)){\n#   data %>% group_by(Protein) %>% summarize(sum=sum(Count)) -> data2\n#   data2$Protein <- reorder(data2$Protein,data2$sum)\n#  \n#     #Get just one protein to test\n# #sp|F4I7I0|ALAT1_ARATH  #sp|Q9FKA5|Y5957_ARATH\n#   for(proteinname in tail(data2[order(data.frame(data2$sum)),]$Protein,10)){\n#           data_protein <- data %>% filter(Protein==proteinname) #Find the caspase ENS Id for a good example of split peptides\n#           #To do: order n term to c term using start and end\n# \n#           print(data_protein)\n#           data_protein <- droplevels(data_protein)\n# \n#             #sorting function\n#           #id <- order(sapply(data_protein$Start,function(i)i[1]))\n# \n#           #data_protein <- data_protein[order(data.frame(data_protein$Start)),]\n# \n\n          #Make a wide matrix from the tidy data\n          data_wide <- spread(labeled_data, Fraction, Count)\n          data_wide\n          #Fill in NA with 0's to complete the matrix\n          data_wide[is.na(data_wide)] <- 0\n          data_wide\n\n          #sorting function\n          id2 <- (sapply(final_prot$Start,function(i)i[1]))\n\n          #Turn the wide matrix tidy.\n          final_prot <- data_wide %>% gather(Fraction, Count, -Protein, -Peptide, -Start, -End, -Length,-Appearance, -Sequence, -Label)\n          final_prot <- final_prot[order(data.frame(final_prot$Start)),]#final_prot$Start[1]),]\n\n          final_prot$Peptide <- reorder(final_prot$Peptide, final_prot$Start)\n          #filtered <- final_prot# %>% filter(Peptide==\"  \")\n          #Feed peptides into function\n          final_prot %>% split(.$Peptide) %>% map(sparklines) -> plotlist2\n          plotlist2\n\n          #Plot ggplot objects\n          clusterplot <- plot_grid(plotlist = plotlist2, ncol=1, align = \"v\")\n\n          final_prot  %>% split(.$Peptide) %>% map(rectangles) -> listrects\n      coverage <- plot_grid(plotlist = listrects, ncol=1, align = \"v\")\n\n   ##sub  <- ggdraw()+draw_label(members, size=20)\n   ##title <- ggdraw()+draw_label(paste(\"Cluster\",   outfilecluster), vjust=0, size=20)\n      title <-ggdraw()+draw_label(paste(\"Protein:\"), vjust=0, size=20)\n      \n      figure <-  plot_grid(clusterplot, coverage, nrow=1,rel_heights = c(0.1,1))\n      \n      figure_with_title <- plot_grid(title,figure,nrow=2,rel_heights = c(.1,1))\n      figure_with_title\n      t#ggsave(filename=paste('figure_', proteinname, '.png',sep=''),plot=figure_with_title)\n  \n```\n\nPlot everything\n```{r}\n\n# final_prot  %>% split(.$Peptide) %>% map(rectangles) -> listrects\n# coverage <- plot_grid(plotlist = listrects, ncol=1, align = \"v\")\n#   \n# \n# plot_grid(clusterplot, coverage, nrow=1)\n```\n\n\n\n",
    "created" : 1469556587463.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2704208172",
    "id" : "8DCA98A",
    "lastKnownWriteTime" : 1469556467,
    "last_content_update" : 1469556467,
    "path" : "~/Dropbox/R/Marcotte/Sparklines_colored.Rmd",
    "project_path" : "Sparklines_colored.Rmd",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}