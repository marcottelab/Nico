{
    "collab_server" : "",
    "contents" : "---\ntitle: \"complexes\"\noutput: html_document\n---\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r}\nrequire(ggplot2)\nrequire(cowplot)\nrequire(gdata)\nrequire(gplots)\nrequire(reshape2)\nrequire(plyr)\nrequire(dplyr)\nrequire(purrr)\nrequire(stringr)\nrequire(tidyr)\n```\n\n\n\n\n\n\n```{r}\n\n\nplotting <- function(z){\n    plt <- ggplot(z, aes(x=Fraction, y=Count, group=1)) +\n    geom_line(size=0.5) +\n    theme(legend.position=\"None\")\n    \n    #print(plt)\n    \n    final_plt <- ggplotGrob(plt)\n\n\n    #print(final_plt)\n    #remove unnecessary plot elements\n    final_plt <- gtable_remove_grobs(final_plt, c('title', 'xlab', 'ylab', 'axis-b','axis-l'))\n    print(final_plt)\n        #compress unused plot space\n        final_plt <- gtable_squash_rows(final_plt, c(1, 2, 4, 5, 6))\n    return(final_plt)\n}\n\n\n```\n\nRead in experimental data\n```{r}\ndata <- read.csv(\"elution_peptides_positions_arath.csv\", sep=\",\", header=TRUE)\n```\n\n\n```{r}\n\n   #Choose a group to plot sparklines for\n   #Here, groups are numbered 1-700\n   #for( i in seq(302, 302)){\n    \n \n    #Get just one protein to test\n\n    data_protein <- data %>% filter(Protein=='sp|F4JVN6|TPPII_ARATH') #Find the caspase ENS Id for a good example of split peptiddes\n    #To do: order n term to c term using start and end\n\n    print(data_protein)\n    data_protein <- droplevels(data_protein)\n    data_protein <- data_protein[order(data_protein$Start),]\n\n    \n    #Make a wide matrix from the tidy data\n    data_wide <- spread(data_protein, Fraction, Count)\n    data_wide\n    #Fill in NA with 0's to complete the matrix\n    data_wide[is.na(data_wide)] <- 0\n    data_wide\n    \n    #Turn the wide matrix tidy. \n    final_prot <- data_wide %>% gather(Fraction, Count, -Protein, -Peptide, -Start, -End, -Length, -Sequence, -X)\n    final_prot <- final_prot[order(final_prot$Protein,final_prot$Start),]\n\n    \n    #Feed peptides into function\n     final_prot  %>% split(.$Peptide) %>% map(plotting) -> plotlist2\n    plotlist2\n    \n    #Plot ggplot objects\n    clusterplot <- plot_grid(plotlist = plotlist2, ncol=1, align = \"v\")\n\n    clusterplot\n\n```\n",
    "created" : 1468266972787.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "829199963",
    "id" : "B6E62FDC",
    "lastKnownWriteTime" : 1468282333,
    "last_content_update" : 1468282333276,
    "path" : "~/Dropbox/R/Marcotte/Sparklines.Rmd",
    "project_path" : "Sparklines.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}